{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shoem\\\\Documents\\\\mthree\\\\module_seven_exercises\\\\contact-list-react\\\\src\\\\App.js\";\nimport React from 'react';\nimport ContactTable from './components/ContactTable';\nimport ContactForm from './components/ContactForm';\nimport ContactModal from './components/ContactModal';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nconst SERVICE_URL = \"https://tsg-contactlist.herokuapp.com\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: false,\n      showEditModal: false,\n      contactData: [{\n        \"contactId\": 1,\n        \"firstName\": \"Fake\",\n        \"lastName\": \"Data\",\n        \"company\": \"Unknown Inc.\",\n        \"phone\": \"000-0000\",\n        \"email\": \"fakedata@unknown.io\"\n      }],\n      newContactData: {\n        firstName: '',\n        lastName: '',\n        company: '',\n        phone: '',\n        email: ''\n      },\n      editContactData: {\n        \"contactId\": 42,\n        \"firstName\": \"Zaphod\",\n        \"lastName\": \"Beeblebrox\",\n        \"company\": \"Heart of Gold\",\n        \"phone\": \"000-0000\",\n        \"email\": \"prez@badnews.us\"\n      },\n      addFormErrors: {\n        firstName: '',\n        lastName: '',\n        company: '',\n        phone: '',\n        email: ''\n      },\n      editFormErrors: {\n        firstName: '',\n        lastName: '',\n        company: '',\n        phone: '',\n        email: ''\n      }\n    };\n\n    this.validateContact = contact => {\n      let errors = {\n        firstName: \"\",\n        lastName: \"\",\n        company: \"\",\n        phone: \"\",\n        email: \"\",\n        isValid: true\n      };\n      let isInvalid = false;\n\n      if (!contact.firstName) {\n        errors.firstName = \"Please enter a first name.\";\n        errors.isValid = false;\n      }\n\n      if (!contact.lastName) {\n        errors.lastName = \"Please enter a last name.\";\n        errors.isValid = false;\n      }\n\n      if (!contact.company) {\n        errors.company = \"Please enter the company name.\";\n        errors.isValid = false;\n      }\n\n      if (!contact.phone && !contact.email) {\n        errors.phone = \"Please enter a phone or email contact (or both).\";\n        errors.email = \"Please enter a phone or email contact (or both).\";\n        errors.isValid = false;\n      }\n\n      let phonePattern = \"[0-9]{3}-[0-9]{4}\";\n\n      if (contact.phone && !contact.phone.match(phonePattern)) {\n        errors.phone = \"Please match the expected pattern.\";\n        errors.isValid = false;\n      }\n\n      let emailPattern = \"^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$\";\n\n      if (contact.email && !contact.email.match(emailPattern)) {\n        errors.email = \"Please match the expected pattern.\";\n        errors.isValid = false;\n      }\n\n      return errors;\n    };\n\n    this.handleAddFormChange = event => {\n      //The event triggering this function should be an input's onChange event\n      //We need to grab the input's name & value so we can associate it with the\n      //newContactData within the App's state.\n      let inputName = event.target.name;\n      let inputValue = event.target.value;\n      let contactInfo = this.state.newContactData;\n      console.log(`Updating new contact data: ${inputName} : ${inputValue}`);\n\n      if (contactInfo.hasOwnProperty(inputName)) {\n        contactInfo[inputName] = inputValue;\n        this.setState({\n          newContactData: contactInfo\n        });\n      }\n    };\n\n    this.handleAddFormSubmit = event => {\n      console.log(\"Adding contact!\");\n      if (event) event.preventDefault();\n      let validationErrors = this.validateContact(this.state.newContactData);\n\n      if (!validationErrors.isValid) {\n        console.log(\"New contact is invalid. Reporting errors.\", validationErrors);\n        this.setState({\n          addFormErrors: validationErrors\n        });\n        return;\n      }\n\n      fetch(SERVICE_URL + '/contact/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(this.state.newContactData)\n      }).then(response => response.json()).then(data => {\n        console.log('Add Contact - Success:', data);\n        this.setState({\n          newContactData: {\n            firstName: '',\n            lastName: '',\n            company: '',\n            phone: '',\n            email: ''\n          },\n          addFormErrors: validationErrors\n        });\n        this.loadContactData();\n      }).catch(error => {\n        console.log('Add Contact - Error:', error);\n      });\n    };\n\n    this.handleEditModalClose = event => {\n      console.log(\"Closing Edit Modal\");\n      this.setState({\n        showEditModal: false\n      });\n    };\n\n    this.handleEditModalOpen = event => {\n      console.log(\"Opening Edit Modal\");\n      if (event) event.preventDefault();\n      let contactId = event.target.value;\n      console.log(`Editing contact id ${contactId}`); //submit a GET request to the /contact/{contactId} endpoint\n      //the response should come back with the associated contact's JSON\n\n      fetch(SERVICE_URL + '/contact/' + contactId).then(response => response.json()).then(data => {\n        console.log('Success:', data);\n        this.setState({\n          editContactData: data,\n          showEditModal: true\n        });\n      }).catch(error => {\n        console.error('Error:', error);\n      });\n    };\n\n    this.handleEditFormChange = event => {\n      let inputName = event.target.name;\n      let inputValue = event.target.value;\n      let contactInfo = this.state.editContactData;\n      console.log(`Something changed in ${inputName}:${inputValue}`);\n\n      if (contactInfo.hasOwnProperty(inputName)) {\n        contactInfo[inputName] = inputValue;\n        this.setState({\n          editContactData: contactInfo\n        });\n      }\n    };\n\n    this.handleEditFormSubmit = event => {\n      if (event) event.preventDefault();\n      letcontactId = event.target.value;\n      console.log(`Submitting edit for contact id ${contactId}`);\n      console.log(this.state.editContactData);\n      let validationErrors = this.validateContact(this.state.editContactData);\n\n      if (!validationErrors.isValid) {\n        console.log(\"Edited contact is invalid. Reporting errors.\");\n        this.setState({\n          editFormErrors: validationErrors\n        });\n        return;\n      }\n\n      fetch(SERVICE_URL + '/contact/' + contactId, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(this.state.editContactData)\n      }).then(response => response.json()).then(data => {\n        console.log('Success:', data);\n        this.setState({\n          showEditModal: false,\n          editFormErrors: validationErrors\n        });\n        this.loadContactData();\n      }).catch(error => {\n        console.error('Error:', error);\n      });\n    };\n\n    this.handleDeleteContact = event => {\n      if (event) event.preventDefault();\n      let contactId = event.target.value;\n      console.log(`Submitting delete for contact id${contactId}`);\n      fetch(SERVICE_URL + '/contact/' + contactId, {\n        method: 'DELETE'\n      }).then(data => {\n        this.loadContactData();\n      }).catch(error => {\n        console.error('Error:', error);\n      });\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"App is now mounted.\");\n    this.loadContactData();\n  }\n\n  loadContactData() {\n    this.setState({\n      loading: true\n    });\n    console.log(\"Loading contact data\");\n    fetch(SERVICE_URL + \"/contacts\").then(data => data.json()).then(data => this.setState({\n      contactData: data,\n      loading: false\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 21\n      }\n    }, \"Contact Application\"))), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      sm: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 21\n      }\n    }, \"My Contacts\"), /*#__PURE__*/React.createElement(ContactTable, {\n      contacts: this.state.contactData,\n      handleEdit: this.handleEditModalOpen,\n      handleDelete: this.handleDeleteContact,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      sm: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 21\n      }\n    }, \"Add New Contact\"), /*#__PURE__*/React.createElement(ContactForm, {\n      handleSubmit: this.handleAddFormSubmit,\n      handleChange: this.handleAddFormChange,\n      contactData: this.state.newContactData,\n      contactErrors: this.state.addFormErrors,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(ContactModal, {\n      show: this.state.showEditModal,\n      handleSubmit: this.handleEditFormSubmit,\n      handleChange: this.handleEditFormChange,\n      handleClose: this.handleEditModalClose,\n      contactData: this.state.editContactData,\n      contactErrors: this.state.editFormErrors,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/shoem/Documents/mthree/module_seven_exercises/contact-list-react/src/App.js"],"names":["React","ContactTable","ContactForm","ContactModal","Container","Row","Col","SERVICE_URL","App","Component","state","loading","showEditModal","contactData","newContactData","firstName","lastName","company","phone","email","editContactData","addFormErrors","editFormErrors","validateContact","contact","errors","isValid","isInvalid","phonePattern","match","emailPattern","handleAddFormChange","event","inputName","target","name","inputValue","value","contactInfo","console","log","hasOwnProperty","setState","handleAddFormSubmit","preventDefault","validationErrors","fetch","method","headers","body","JSON","stringify","then","response","json","data","loadContactData","catch","error","handleEditModalClose","handleEditModalOpen","contactId","handleEditFormChange","handleEditFormSubmit","letcontactId","handleDeleteContact","componentDidMount","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nimport ContactTable from './components/ContactTable'\r\nimport ContactForm from './components/ContactForm'\r\nimport ContactModal from './components/ContactModal'\r\n\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst SERVICE_URL = \"https://tsg-contactlist.herokuapp.com\"\r\n\r\nclass App extends React.Component\r\n{\r\n    state = {\r\n        loading: false,\r\n        showEditModal: false,\r\n        contactData: [\r\n            {\r\n                \"contactId\": 1, \"firstName\": \"Fake\", \"lastName\": \"Data\", \"company\": \"Unknown Inc.\",\r\n                \"phone\": \"000-0000\", \"email\": \"fakedata@unknown.io\"\r\n            }],\r\n\r\n        newContactData: {\r\n            firstName: '', lastName: '', company: '', phone: '', email: ''\r\n        },\r\n\r\n        editContactData: {\r\n            \"contactId\": 42,\r\n            \"firstName\": \"Zaphod\",\r\n            \"lastName\": \"Beeblebrox\",\r\n            \"company\": \"Heart of Gold\",\r\n            \"phone\": \"000-0000\",\r\n            \"email\": \"prez@badnews.us\"\r\n        },\r\n\r\n        addFormErrors: {\r\n            firstName: '',\r\n            lastName: '',\r\n            company: '',\r\n            phone: '',\r\n            email: ''\r\n        },\r\n\r\n        editFormErrors: {\r\n            firstName: '',\r\n            lastName: '',\r\n            company: '',\r\n            phone: '',\r\n            email: ''\r\n        }\r\n    }\r\n\r\n    validateContact = (contact) => {\r\n        let errors = {\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            company: \"\",\r\n            phone: \"\",\r\n            email: \"\",\r\n            isValid: true\r\n        }\r\n\r\n        let isInvalid = false;\r\n\r\n        if (!contact.firstName) {\r\n            errors.firstName = \"Please enter a first name.\"\r\n            errors.isValid = false;\r\n        }\r\n\r\n        if (!contact.lastName) {\r\n            errors.lastName = \"Please enter a last name.\"\r\n            errors.isValid = false;\r\n        }\r\n\r\n        if (!contact.company) {\r\n            errors.company = \"Please enter the company name.\"\r\n            errors.isValid = false;\r\n        }\r\n\r\n        if (!contact.phone && !contact.email) {\r\n            errors.phone = \"Please enter a phone or email contact (or both).\"\r\n            errors.email = \"Please enter a phone or email contact (or both).\"\r\n            errors.isValid = false;\r\n        }\r\n\r\n        let phonePattern = \"[0-9]{3}-[0-9]{4}\";\r\n\r\n        if (contact.phone && !contact.phone.match(phonePattern)) {\r\n            errors.phone = \"Please match the expected pattern.\"\r\n            errors.isValid = false;\r\n        }\r\n\r\n        let emailPattern = \"^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$\";\r\n\r\n        if (contact.email && !contact.email.match(emailPattern)) {\r\n            errors.email = \"Please match the expected pattern.\"\r\n            errors.isValid = false;\r\n        }\r\n\r\n        return errors;\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\"App is now mounted.\")\r\n        this.loadContactData();\r\n    }\r\n\r\n    handleAddFormChange = (event) => {\r\n        //The event triggering this function should be an input's onChange event\r\n        //We need to grab the input's name & value so we can associate it with the\r\n        //newContactData within the App's state.\r\n        let inputName = event.target.name;\r\n        let inputValue = event.target.value;\r\n        let contactInfo = this.state.newContactData;\r\n\r\n        console.log(`Updating new contact data: ${inputName} : ${inputValue}`)\r\n\r\n        if (contactInfo.hasOwnProperty(inputName)) {\r\n            contactInfo[inputName] = inputValue;\r\n            this.setState({newContactData: contactInfo})\r\n        }\r\n    }\r\n\r\n    handleAddFormSubmit = (event) => {\r\n        console.log(\"Adding contact!\")\r\n\r\n        if (event) event.preventDefault();\r\n\r\n        let validationErrors = this.validateContact(this.state.newContactData)\r\n\r\n        if (!validationErrors.isValid) {\r\n            console.log(\"New contact is invalid. Reporting errors.\", validationErrors)\r\n            this.setState({ addFormErrors: validationErrors })\r\n            return\r\n        }\r\n\r\n        fetch(SERVICE_URL + '/contact/', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(this.state.newContactData),\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log('Add Contact - Success:', data);\r\n                this.setState({\r\n                    newContactData: {\r\n                        firstName: '', lastName: '', company: '', phone: '', email: ''\r\n                    },\r\n\r\n                    addFormErrors: validationErrors\r\n                })\r\n\r\n                this.loadContactData();\r\n            })\r\n            .catch((error) => {\r\n                console.log('Add Contact - Error:', error)\r\n            });\r\n    }\r\n\r\n    handleEditModalClose = (event) => {\r\n        console.log(\"Closing Edit Modal\")\r\n        this.setState({ showEditModal: false })\r\n    }\r\n\r\n    handleEditModalOpen = (event) => {\r\n        console.log(\"Opening Edit Modal\")\r\n        if (event) event.preventDefault();\r\n        let contactId = event.target.value;\r\n        console.log(`Editing contact id ${contactId}`)\r\n\r\n        //submit a GET request to the /contact/{contactId} endpoint\r\n        //the response should come back with the associated contact's JSON\r\n        fetch(SERVICE_URL + '/contact/' + contactId)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log('Success:', data);\r\n                this.setState(\r\n                    { editContactData: data, showEditModal: true }\r\n                )\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error:', error);\r\n            });\r\n    }\r\n\r\n    handleEditFormChange = (event) => {\r\n        let inputName = event.target.name;\r\n        let inputValue = event.target.value;\r\n        let contactInfo = this.state.editContactData;\r\n\r\n        console.log(`Something changed in ${inputName}:${inputValue}`)\r\n\r\n        if (contactInfo.hasOwnProperty(inputName)) {\r\n            contactInfo[inputName] = inputValue;\r\n            this.setState({editContactData: contactInfo})\r\n        }\r\n    }\r\n\r\n    handleEditFormSubmit = (event) => {\r\n        if (event) event.preventDefault();\r\n        letcontactId = event.target.value;\r\n        console.log(`Submitting edit for contact id ${contactId}`)\r\n        console.log(this.state.editContactData)\r\n\r\n        let validationErrors = this.validateContact(this.state.editContactData)\r\n\r\n        if (!validationErrors.isValid) {\r\n            console.log(\"Edited contact is invalid. Reporting errors.\")\r\n            this.setState({ editFormErrors: validationErrors })\r\n            return\r\n        }\r\n\r\n        fetch(SERVICE_URL + '/contact/' + contactId, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(this.state.editContactData),\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log('Success:', data);\r\n                this.setState({ showEditModal: false, editFormErrors: validationErrors })\r\n                this.loadContactData();\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error:', error);\r\n            });\r\n    }\r\n\r\n    handleDeleteContact = (event) => {\r\n        if (event) event.preventDefault();\r\n        let contactId = event.target.value;\r\n        console.log(`Submitting delete for contact id${contactId}`)\r\n\r\n        fetch(SERVICE_URL + '/contact/' + contactId, {\r\n            method: 'DELETE',\r\n        })\r\n            .then(data => {\r\n                this.loadContactData();\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error:', error);\r\n            });\r\n    }\r\n\r\n    loadContactData() {\r\n        this.setState({ loading: true })\r\n        console.log(\"Loading contact data\")\r\n        fetch(SERVICE_URL + \"/contacts\")\r\n            .then(data => data.json())\r\n            .then(data => this.setState(\r\n                { contactData: data, loading: false }\r\n            ))\r\n    }\r\n\r\n    render() {\r\n        return(\r\n        <Container fluid>\r\n            <Row>\r\n                <Col>\r\n                    <h1 className=\"text-center\">Contact Application</h1>\r\n                </Col>\r\n            </Row>\r\n            <hr />\r\n            <Row>\r\n                <Col sm={8}>\r\n                    <h2>My Contacts</h2>\r\n                        <ContactTable\r\n                            contacts={this.state.contactData}\r\n                            handleEdit={this.handleEditModalOpen}\r\n                            handleDelete={this.handleDeleteContact}/>\r\n                </Col>\r\n                <Col sm={4}>\r\n                    <h2>Add New Contact</h2>\r\n                        <ContactForm\r\n                            handleSubmit={this.handleAddFormSubmit}\r\n                            handleChange={this.handleAddFormChange}\r\n                            contactData={this.state.newContactData} \r\n                            contactErrors={this.state.addFormErrors} />\r\n                </Col>\r\n            </Row>\r\n                <ContactModal\r\n                    show={this.state.showEditModal}\r\n                    handleSubmit={this.handleEditFormSubmit}\r\n                    handleChange={this.handleEditFormChange}\r\n                    handleClose={this.handleEditModalClose}\r\n                    contactData={this.state.editContactData}\r\n                    contactErrors={this.state.editFormErrors} />\r\n            </Container >\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}