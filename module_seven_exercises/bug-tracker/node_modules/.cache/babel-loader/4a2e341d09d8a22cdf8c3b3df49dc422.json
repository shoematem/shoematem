{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shoem\\\\Documents\\\\mthree\\\\module_seven_exercises\\\\bug-tracker\\\\src\\\\components\\\\SubmitFormValidated.js\";\nimport React, { Component } from \"react\";\nimport { Formik } from \"formik\";\nimport Container from \"react-bootstrap/Container\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport Alert from \"react-bootstrap/Alert\";\nimport TextArea from \"./inputs/TextArea\";\nimport CheckBox from \"./inputs/CheckBox\";\nimport RadioButton from \"./inputs/RadioButton\";\nimport Button from \"./inputs/Button\";\nimport Select from \"./inputs/Select\";\nimport Input from \"./inputs/Input\";\n\nclass SubmitFormValidated extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      submission: {\n        subject: \"\",\n        description: \"\",\n        type: \"\",\n        priority: \"None\",\n        anonymous: \"false\"\n      },\n      allTypes: [\"Bug\", \"Complaint\", \"Idea\", \"Task\"],\n      allPriorities: [\"High\", \"Medium\", \"Low\", \"None\"]\n    };\n    this.handleClearForm = this.handleClearForm.bind(this);\n    this.handleSubmitForm = this.handleSubmitForm.bind(this);\n  }\n\n  handleValidateForm(values) {\n    let errors = {};\n\n    if (!values.subject.length > 0) {\n      errors.subject = \"Subject is required\";\n    }\n\n    if (!values.description.length > 0) {\n      errors.description = \"Description is required\";\n    }\n\n    if (!values.type.length > 0) {\n      errors.type = \"Submission type is required\";\n    }\n\n    return errors;\n  }\n\n  handleClearForm(values) {\n    this.setState({\n      submission: {\n        subject: \"\",\n        description: \"\",\n        type: \"\",\n        priority: \"None\",\n        anonymous: \"false\"\n      }\n    });\n    console.log(\"submission form cleared\");\n  }\n\n  handleSubmitForm(values, {\n    setSubmitting\n  }) {\n    const submission = values;\n    alert(JSON.stringify(submission, null, 2));\n    console.log(\"submitting submission: \" + JSON.stringify(submission));\n    setSubmitting(false);\n  }\n\n  render() {\n    let {\n      submission,\n      allTypes,\n      allPriorities\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      style: {\n        width: \"35 em\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Formik, {\n      enableReinitialize: true,\n      initialValues: submission,\n      validate: this.handleValidateForm,\n      onReset: this.handleClearForm,\n      onSubmit: this.handleSubmitForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }, formikProps => {\n      let {\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleReset,\n        handleSubmit,\n        isSubmitting\n      } = formikProps;\n      return /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        name: \"subject\",\n        value: values.subject,\n        onChange: handleChange,\n        type: \"text\",\n        title: \"Subject\",\n        placeholder: \"Enter subject...\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 41\n        }\n      }), /*#__PURE__*/React.createElement(Alert, {\n        show: !errors.subject == \"\",\n        variant: \"danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 41\n        }\n      }, errors.subject && touched.subject && errors.subject), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 41\n        }\n      }), /*#__PURE__*/React.createElement(TextArea, {\n        name: \"description\",\n        value: values.description,\n        onChange: handleChange,\n        title: \"Description:\",\n        cols: 30,\n        rows: 8,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 41\n        }\n      }), /*#__PURE__*/React.createElement(Alert, {\n        show: !errors.description == \"\",\n        variant: \"danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 41\n        }\n      }, errors.description && touched.description && errors.description), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 41\n        }\n      })), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(Select, {\n        name: \"type\",\n        value: values.type,\n        onChange: handleChange,\n        title: \"Type:\",\n        placeholder: \"Select Type...\",\n        options: allTypes,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 49\n        }\n      }), /*#__PURE__*/React.createElement(Alert, {\n        show: !errors.type == \"\",\n        variant: \"danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 49\n        }\n      }, errors.type && touched.type && errors.type)), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(RadioButton, {\n        name: \"priority\",\n        value: values.priority,\n        onChange: handleChange,\n        title: \"Priority:\",\n        options: allPriorities,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 49\n        }\n      }))), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 41\n        }\n      }), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: {\n          span: 10,\n          offset: 1\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(CheckBox, {\n        name: \"anonymous\",\n        value: values.anonymous,\n        onChange: handleChange,\n        title: \"Anonymous Submission\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 49\n        }\n      }))), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 41\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 41\n        }\n      }), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: {\n          span: 8,\n          offset: 3\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        type: \"reset\",\n        action: handleReset,\n        title: \"Clear\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 49\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        type: \"submit\",\n        disabled: isSubmitting,\n        title: \"Submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 49\n        }\n      }))))));\n    }));\n  }\n\n}\n\nexport default SubmitFormValidated;","map":{"version":3,"sources":["C:/Users/shoem/Documents/mthree/module_seven_exercises/bug-tracker/src/components/SubmitFormValidated.js"],"names":["React","Component","Formik","Container","Col","Row","Alert","TextArea","CheckBox","RadioButton","Button","Select","Input","SubmitFormValidated","constructor","props","state","submission","subject","description","type","priority","anonymous","allTypes","allPriorities","handleClearForm","bind","handleSubmitForm","handleValidateForm","values","errors","length","setState","console","log","setSubmitting","alert","JSON","stringify","render","width","formikProps","touched","handleChange","handleReset","handleSubmit","isSubmitting","span","offset"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Alert from \"react-bootstrap/Alert\";\r\n\r\nimport TextArea from \"./inputs/TextArea\";\r\nimport CheckBox from \"./inputs/CheckBox\";\r\nimport RadioButton from \"./inputs/RadioButton\";\r\nimport Button from \"./inputs/Button\";\r\nimport Select from \"./inputs/Select\";\r\nimport Input from \"./inputs/Input\";\r\n\r\nclass SubmitFormValidated extends Component {\r\n    state = {\r\n        submission: {\r\n            subject: \"\",\r\n            description: \"\",\r\n            type: \"\",\r\n            priority: \"None\",\r\n            anonymous: \"false\"\r\n        },\r\n\r\n        allTypes: [\"Bug\", \"Complaint\", \"Idea\", \"Task\"],\r\n        allPriorities: [\"High\", \"Medium\", \"Low\", \"None\"]\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleClearForm = this.handleClearForm.bind(this);\r\n        this.handleSubmitForm = this.handleSubmitForm.bind(this);\r\n    }\r\n\r\n    handleValidateForm(values) {\r\n        let errors = {};\r\n\r\n        if (!values.subject.length > 0) {\r\n            errors.subject = \"Subject is required\";\r\n        }\r\n\r\n        if (!values.description.length > 0) {\r\n            errors.description = \"Description is required\";\r\n        }\r\n\r\n        if (!values.type.length > 0) {\r\n            errors.type = \"Submission type is required\";\r\n        }\r\n\r\n        return errors;\r\n    }\r\n\r\n    handleClearForm(values) {\r\n        this.setState({\r\n            submission: {\r\n                subject: \"\",\r\n                description: \"\",\r\n                type: \"\",\r\n                priority: \"None\",\r\n                anonymous: \"false\"\r\n            }\r\n        });\r\n\r\n        console.log(\"submission form cleared\");\r\n    }\r\n\r\n    handleSubmitForm(values, { setSubmitting }) {\r\n        const submission = values;\r\n        alert(JSON.stringify(submission, null, 2));\r\n        console.log(\"submitting submission: \" + JSON.stringify(submission));\r\n        setSubmitting(false);\r\n    }\r\n\r\n    render() {\r\n        let { submission, allTypes, allPriorities } = this.state;\r\n\r\n        return (\r\n            <Container fluid style={{ width: \"35 em\" }}>\r\n                <Formik\r\n                    enableReinitialize={true}\r\n                    initialValues={submission}\r\n                    validate={this.handleValidateForm}\r\n                    onReset={this.handleClearForm}\r\n                    onSubmit={this.handleSubmitForm}\r\n                >\r\n                    {formikProps => {\r\n                        let {\r\n                            values,\r\n                            errors,\r\n                            touched,\r\n                            handleChange,\r\n                            handleReset,\r\n                            handleSubmit,\r\n                            isSubmitting\r\n                        } = formikProps;\r\n\r\n                        return (\r\n                            <form onSubmit={handleSubmit}>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Input\r\n                                            name={\"subject\"}\r\n                                            value={values.subject}\r\n                                            onChange={handleChange}\r\n                                            type={\"text\"}\r\n                                            title={\"Subject\"}\r\n                                            placeholder={\"Enter subject...\"}\r\n                                        />\r\n                                        <Alert show={!errors.subject == \"\"} variant={\"danger\"}>\r\n                                            {errors.subject && touched.subject && errors.subject}\r\n                                        </Alert>\r\n                                        <br />\r\n\r\n                                        <TextArea\r\n                                            name={\"description\"}\r\n                                            value={values.description}\r\n                                            onChange={handleChange}\r\n                                            title={\"Description:\"}\r\n                                            cols={30}\r\n                                            rows={8}\r\n                                        />\r\n                                        <Alert show={!errors.description == \"\"} variant={\"danger\"}>\r\n                                            {errors.description &&\r\n                                                touched.description &&\r\n                                                errors.description}\r\n                                        </Alert>\r\n                                        <br />\r\n                                    </Col>\r\n\r\n                                    <Col>\r\n                                        <Row>\r\n                                            <Col>\r\n                                                <Select\r\n                                                    name={\"type\"}\r\n                                                    value={values.type}\r\n                                                    onChange={handleChange}\r\n                                                    title={\"Type:\"}\r\n                                                    placeholder={\"Select Type...\"}\r\n                                                    options={allTypes}\r\n                                                />\r\n                                                <Alert show={!errors.type == \"\"} variant={\"danger\"}>\r\n                                                    {errors.type && touched.type && errors.type}\r\n                                                </Alert>\r\n                                            </Col>\r\n\r\n                                            <Col>\r\n                                                <RadioButton\r\n                                                    name={\"priority\"}\r\n                                                    value={values.priority}\r\n                                                    onChange={handleChange}\r\n                                                    title={\"Priority:\"}\r\n                                                    options={allPriorities}\r\n                                                />\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <br />\r\n\r\n                                        <Row>\r\n                                            <Col md={{ span: 10, offset: 1 }}>\r\n                                                <CheckBox\r\n                                                    name={\"anonymous\"}\r\n                                                    value={values.anonymous}\r\n                                                    onChange={handleChange}\r\n                                                    title={\"Anonymous Submission\"}\r\n                                                />\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <br />\r\n                                        <br />\r\n\r\n                                        <Row>\r\n                                            <Col md={{ span: 8, offset: 3 }}>\r\n                                                <Button\r\n                                                    type=\"reset\"\r\n                                                    action={handleReset}\r\n                                                    title={\"Clear\"}\r\n                                                />\r\n                                                <Button\r\n                                                    type=\"submit\"\r\n                                                    disabled={isSubmitting}\r\n                                                    title={\"Submit\"}\r\n                                                />\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </Col>\r\n                                </Row>\r\n                            </form>\r\n                        );\r\n                    }}\r\n                </Formik>\r\n            </Container>\r\n        );\r\n    }                                       \r\n}\r\n\r\nexport default SubmitFormValidated"]},"metadata":{},"sourceType":"module"}