{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shoem\\\\Documents\\\\mthree\\\\module_seven_exercises\\\\bug-tracker\\\\src\\\\components\\\\SubmitFormWithStore.js\";\nimport React, { Component } from \"react\";\nimport { Formik } from \"formik\";\nimport Container from \"react-bootstrap/Container\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport Alert from \"react-bootstrap/Alert\";\nimport TextArea from \"./inputs/TextArea\";\nimport CheckBox from \"./inputs/CheckBox\";\nimport RadioButton from \"./inputs/RadioButton\";\nimport Button from \"./inputs/Button\";\nimport Select from \"./inputs/Select\";\nimport Input from \"./inputs/Input\";\nimport { view } from \"react-easy-state\";\nimport submission_store from \"./stores/submission_store\";\n\nclass SubmitFormWithStore extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      allTypes: [\"Bug\", \"Complaint\", \"Idea\", \"Task\"],\n      allPriorities: [\"High\", \"Medium\", \"Low\", \"None\"]\n    };\n  }\n\n  handleValidateForm(values) {\n    let errors = {};\n\n    if (!values.subject.length > 0) {\n      errors.subject = \"Subject is required\";\n    }\n\n    if (!values.description.length > 0) {\n      errors.description = \"Description is required\";\n    }\n\n    if (!values.type.length > 0) {\n      errors.type = \"Submission type is required\";\n    }\n\n    return errors;\n  }\n\n  handleClearForm(values) {\n    submission_store.resetSubmission();\n  }\n\n  handleSubmitForm(values, {\n    setSubmitting\n  }) {\n    let submission_id;\n\n    if (values.id) {\n      submission_id = submission_store.updateSubmission(values.id, values).id;\n    } else {\n      submission_id = submission_store.createSubmission(values).id;\n    }\n\n    submission_store.resetSubmission();\n    setTimeout(() => {\n      const submission = submission_store.getSubmission(submission_id);\n      setSubmitting(false);\n    }, 400);\n  }\n\n  render() {\n    let {\n      allTypes,\n      allPriorities\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Formik, {\n      enableReinitialize: true,\n      initialValues: submission_store.selectedSubmission,\n      validate: this.handleValidateForm,\n      onReset: this.handleClearForm,\n      onSubmit: this.handleSubmitForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }, formikProps => {\n      let {\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleReset,\n        handleSubmit,\n        isSubmitting\n      } = formikProps;\n      return /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        name: \"subject\",\n        value: values.subject,\n        onChange: handleChange,\n        type: \"text\",\n        title: \"Subject\",\n        placeholder: \"Enter subject...\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 41\n        }\n      }), /*#__PURE__*/React.createElement(Alert, {\n        show: !errors.subject == \"\",\n        variant: \"danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 41\n        }\n      }, errors.subject && touched.subject && errors.subject), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 41\n        }\n      }), /*#__PURE__*/React.createElement(TextArea, {\n        name: \"description\",\n        value: values.description,\n        onChange: handleChange,\n        title: \"Description:\",\n        cols: 30,\n        rows: 8,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 41\n        }\n      }), /*#__PURE__*/React.createElement(Alert, {\n        show: !errors.description == \"\",\n        variant: \"danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 41\n        }\n      }, errors.description && touched.description && errors.description), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 41\n        }\n      })), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(Select, {\n        name: \"type\",\n        value: values.type,\n        onChange: handleChange,\n        title: \"Type:\",\n        placeholder: \"Select Type...\",\n        options: allTypes,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 49\n        }\n      }), /*#__PURE__*/React.createElement(Alert, {\n        show: !errors.type == \"\",\n        variant: \"danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 49\n        }\n      }, errors.type && touched.type && errors.type)), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(RadioButton, {\n        name: \"priority\",\n        value: values.priority,\n        onChange: handleChange,\n        title: \"Priority:\",\n        options: allPriorities,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 49\n        }\n      }))), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 41\n        }\n      }), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: {\n          span: 8,\n          offset: 2\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(CheckBox, {\n        name: \"anonymous\",\n        value: values.anonymous,\n        onChange: handleChange,\n        title: \"Anonymous Submission\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 49\n        }\n      }))), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 41\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 41\n        }\n      }), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: {\n          span: 6,\n          offset: 4\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        type: \"reset\",\n        action: handleReset,\n        title: \"Clear\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 49\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        type: \"submit\",\n        disabled: isSubmitting,\n        title: \"Submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 49\n        }\n      }))))));\n    }));\n  }\n\n}\n\nexport default view(SubmitFormWithStore);","map":{"version":3,"sources":["C:/Users/shoem/Documents/mthree/module_seven_exercises/bug-tracker/src/components/SubmitFormWithStore.js"],"names":["React","Component","Formik","Container","Col","Row","Alert","TextArea","CheckBox","RadioButton","Button","Select","Input","view","submission_store","SubmitFormWithStore","state","allTypes","allPriorities","handleValidateForm","values","errors","subject","length","description","type","handleClearForm","resetSubmission","handleSubmitForm","setSubmitting","submission_id","id","updateSubmission","createSubmission","setTimeout","submission","getSubmission","render","selectedSubmission","formikProps","touched","handleChange","handleReset","handleSubmit","isSubmitting","priority","span","offset","anonymous"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Alert from \"react-bootstrap/Alert\";\r\nimport TextArea from \"./inputs/TextArea\";\r\nimport CheckBox from \"./inputs/CheckBox\";\r\nimport RadioButton from \"./inputs/RadioButton\";\r\nimport Button from \"./inputs/Button\";\r\nimport Select from \"./inputs/Select\";\r\nimport Input from \"./inputs/Input\";\r\n\r\nimport { view } from \"react-easy-state\";\r\nimport submission_store from \"./stores/submission_store\"\r\n\r\nclass SubmitFormWithStore extends Component {\r\n    state = {\r\n        allTypes: [\"Bug\", \"Complaint\", \"Idea\", \"Task\"],\r\n        allPriorities: [\"High\", \"Medium\", \"Low\", \"None\"]\r\n    };\r\n\r\n    handleValidateForm(values) {\r\n        let errors = {};\r\n        if (!values.subject.length > 0) {\r\n            errors.subject = \"Subject is required\";\r\n        }\r\n        if (!values.description.length > 0) {\r\n            errors.description = \"Description is required\";\r\n        }\r\n        if (!values.type.length > 0) {\r\n            errors.type = \"Submission type is required\";\r\n        }\r\n        return errors;\r\n    }\r\n\r\n    handleClearForm(values) {\r\n        submission_store.resetSubmission();\r\n    }\r\n\r\n    handleSubmitForm(values, { setSubmitting }) {\r\n        let submission_id;\r\n        if (values.id) {\r\n            submission_id\r\n                = submission_store\r\n                    .updateSubmission(values.id, values).id;\r\n        } else {\r\n            submission_id\r\n                = submission_store.createSubmission(values).id;\r\n        }\r\n        submission_store.resetSubmission();\r\n        setTimeout(() => {\r\n            const submission\r\n                = submission_store.getSubmission(submission_id);\r\n            setSubmitting(false);\r\n        }, 400);\r\n    }\r\n\r\n    render() {\r\n        let { allTypes, allPriorities } = this.state;\r\n        return (\r\n            <Container fluid>\r\n                <Formik\r\n                    enableReinitialize={true}\r\n                    initialValues\r\n                    ={submission_store.selectedSubmission}\r\n                    validate={this.handleValidateForm}\r\n                    onReset={this.handleClearForm}\r\n                    onSubmit={this.handleSubmitForm}\r\n                >\r\n                    {formikProps => {\r\n                        let {\r\n                            values,\r\n                            errors,\r\n                            touched,\r\n                            handleChange,\r\n                            handleReset,\r\n                            handleSubmit,\r\n                            isSubmitting\r\n                        } = formikProps;\r\n                        return (\r\n                            <form onSubmit={handleSubmit}>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Input\r\n                                            name={\"subject\"}\r\n                                            value={values.subject}\r\n                                            onChange={handleChange}\r\n                                            type={\"text\"}\r\n                                            title={\"Subject\"}\r\n                                            placeholder={\"Enter subject...\"}\r\n                                        />\r\n                                        <Alert show={!errors.subject == \"\"} variant={\"danger\"}>\r\n                                            {errors.subject\r\n                                                && touched.subject\r\n                                                && errors.subject}\r\n                                        </Alert>\r\n                                        <br />\r\n                                        <TextArea\r\n                                            name={\"description\"}\r\n                                            value={values.description}\r\n                                            onChange={handleChange}\r\n                                            title={\"Description:\"}\r\n                                            cols={30}\r\n                                            rows={8}\r\n                                        />\r\n                                        <Alert show={!errors.description == \"\"} variant={\"danger\"}>\r\n                                            {errors.description\r\n                                                && touched.description\r\n                                                && errors.description}\r\n                                        </Alert>\r\n                                        <br />\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Row>\r\n                                            <Col>\r\n                                                <Select\r\n                                                    name={\"type\"}\r\n                                                    value={values.type}\r\n                                                    onChange={handleChange}\r\n                                                    title={\"Type:\"}\r\n                                                    placeholder={\"Select Type...\"}\r\n                                                    options={allTypes}\r\n                                                />\r\n                                                <Alert show={!errors.type == \"\"} variant={\"danger\"}>\r\n                                                    {errors.type && touched.type && errors.type}\r\n                                                </Alert>\r\n                                            </Col>\r\n                                            <Col>\r\n                                                <RadioButton\r\n                                                    name={\"priority\"}\r\n                                                    value={values.priority}\r\n                                                    onChange={handleChange}\r\n                                                    title={\"Priority:\"}\r\n                                                    options={allPriorities}\r\n                                                />\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <br />\r\n                                        <Row>\r\n                                            <Col md={{ span: 8, offset: 2 }}>\r\n                                                <CheckBox\r\n                                                    name={\"anonymous\"}\r\n                                                    value={values.anonymous}\r\n                                                    onChange={handleChange}\r\n                                                    title={\"Anonymous Submission\"}\r\n                                                />\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <br />\r\n                                        <br />\r\n                                        <Row>\r\n                                            <Col md={{ span: 6, offset: 4 }}>\r\n                                                <Button\r\n                                                    type=\"reset\"\r\n                                                    action={handleReset}\r\n                                                    title={\"Clear\"}\r\n                                                />\r\n                                                <Button\r\n                                                    type=\"submit\"\r\n                                                    disabled={isSubmitting}\r\n                                                    title={\"Submit\"}\r\n                                                />\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </Col>\r\n                                </Row>\r\n                            </form>\r\n                        );\r\n                    }}\r\n                </Formik>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default view(SubmitFormWithStore);"]},"metadata":{},"sourceType":"module"}